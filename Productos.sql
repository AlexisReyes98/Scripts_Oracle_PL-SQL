-- Productos

CREATE TABLE PRODUCTOS
(
    CLAVE_PROD NUMBER PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    PROVEEDOR VARCHAR2(50)
);

SELECT *FROM PRODUCTOS;

-- Inserte valores para probar el funcionamiento de la tabla
INSERT INTO PRODUCTOS VALUES(1,'Sopa','Reyes');
INSERT INTO PRODUCTOS VALUES(34,'Sopa','Reyes');

-- Procedimientos

CREATE OR REPLACE PROCEDURE BAJA_PRODUCTO(C_P NUMBER) IS
BEGIN
    DELETE FROM PRODUCTOS
    WHERE CLAVE_PROD = C_P;
    COMMIT;
END;

EXEC BAJA_PRODUCTO(5);  -- Para probar el procedimiento

-- Funciones

CREATE OR REPLACE FUNCTION CLAVE_MAYOR(p_no NUMBER)
RETURN NUMBER AS
    v_mayor NUMBER;
BEGIN
    SELECT MAX(CLAVE_PROD) INTO v_mayor
    FROM PRODUCTOS;
    RETURN v_mayor;
EXCEPTION
    WHEN NO_DATA_FOUND THEN
    DBMS_OUTPUT.PUT_LINE('No hay registros');
    RETURN -1;
END;

SELECT CLAVE_MAYOR(0) FROM dual;  -- Para probar la función

-- Departamentos

CREATE TABLE DEPARTAMENTOS
(
    CLAVE_DEPTO VARCHAR2(50) PRIMARY KEY,
    NOMBRE VARCHAR2(50),
    JEFE VARCHAR2(50)
);

SELECT *FROM DEPARTAMENTOS;

-- Inserte valores para probar el funcionamiento de la tabla
INSERT INTO DEPARTAMENTOS VALUES('1-Ab','Pape','Alexis');

-- Procedimientos

CREATE OR REPLACE PROCEDURE BAJA_DEPTO(C_D VARCHAR2) IS
BEGIN
    DELETE FROM DEPARTAMENTOS
    WHERE CLAVE_DEPTO = C_D;
    COMMIT;
END;

EXEC BAJA_DEPTO('1-Ab');  -- Para probar el procedimiento

-- Asignación de productos a un depto
CREATE TABLE ASIG_PROD
(
    CLAVE_PROD NUMBER PRIMARY KEY,
    PRECIO NUMBER,
    CLAVE_DEPTO VARCHAR2(50)
);

SELECT *FROM ASIG_PROD;
SELECT CLAVE_PROD FROM ASIG_PROD WHERE CLAVE_DEPTO='1-Ab';
SELECT CLAVE_PROD,PRECIO FROM ASIG_PROD WHERE CLAVE_DEPTO='1-Ab';

-- Inserte valores para probar el funcionamiento de la tabla
INSERT INTO ASIG_PROD VALUES(1,-1,'1-Ab');

-- Procedimientos

CREATE OR REPLACE PROCEDURE BAJA_ASIGPROD(C_P NUMBER) IS
BEGIN
    DELETE FROM ASIG_PROD
    WHERE CLAVE_PROD = C_P;
    COMMIT;
END;

EXEC BAJA_ASIGPROD(1);  -- Para probar el procedimiento

CREATE OR REPLACE PROCEDURE ACTUALIZA_PRECIO(P_NUEVO NUMBER, C_P NUMBER, C_D VARCHAR2)
IS
BEGIN
    UPDATE ASIG_PROD SET PRECIO = P_NUEVO
    WHERE CLAVE_PROD = C_P AND CLAVE_DEPTO = C_D;
END ACTUALIZA_PRECIO;

EXEC ACTUALIZA_PRECIO(-1, 1, '1-Ab');  -- Para probar el procedimiento

